news=> \dt
          List of relations
 Schema |   Name   | Type  |  Owner
--------+----------+-------+---------
 public | articles | table | vagrant
 public | authors  | table | vagrant
 public | log      | table | vagrant
(3 rows)

Table "public.articles"
Column |           Type           |                       Modifiers
--------+--------------------------+-------------------------------------------------------
author | integer                  | not null
title  | text                     | not null
slug   | text                     | not null
lead   | text                     |
body   | text                     |
time   | timestamp with time zone | default now()
id     | integer                  | not null default nextval('articles_id_seq'::regclass)
Indexes:
"articles_pkey" PRIMARY KEY, btree (id)
"articles_slug_key" UNIQUE CONSTRAINT, btree (slug)
Foreign-key constraints:
"articles_author_fkey" FOREIGN KEY (author) REFERENCES authors(id)

Table "public.authors"
Column |  Type   |                      Modifiers
--------+---------+------------------------------------------------------
name   | text    | not null
bio    | text    |
id     | integer | not null default nextval('authors_id_seq'::regclass)
Indexes:
"authors_pkey" PRIMARY KEY, btree (id)
Referenced by:
TABLE "articles" CONSTRAINT "articles_author_fkey" FOREIGN KEY (author) REFERENCES authors(id)

Table "public.log"
Column |           Type           |                    Modifiers
--------+--------------------------+--------------------------------------------------
path   | text                     |
ip     | inet                     |
method | text                     |
status | text                     |
time   | timestamp with time zone | default now()
id     | integer                  | not null default nextval('log_id_seq'::regclass)
Indexes:
"log_pkey" PRIMARY KEY, btree (id)

1. What are the most popular three articles of all time? Which articles have been accessed the most? Present this information as a sorted list with the most popular article at the top.

2. Who are the most popular article authors of all time? That is, when you sum up all of the articles each author has written, which authors get the most page views? Present this as a sorted list with the most popular author at the top.

3. On which days did more than 1% of requests lead to errors? The log table includes a column status that indicates the HTTP status code that the news site sent to the user's browser. (Refer to this lesson for more information about the idea of HTTP status codes.)

select failure_tbl.date as agg_date, failure_tbl.fail_num::decimal/success_tbl.success_num*100 as fail_percentage
from
(select date(time) as date, count(*) as fail_num from log where status != '200 OK' group by date(time)) failure_tbl
join
(select date(time), count(*) as success_num from log where status = '200 OK' group by date(time)) success_tbl
on failure_tbl.date = success_tbl.date
where agg_date = '2016-07-27';

create view failure as
select date(time) as date, count(*) as num from log where status != '200 OK' group by date(time);

create view success as
select date(time) as date, count(*) as num from log where status = '200 OK' group by date(time);

create view failure_rate as
select failure.date, failure.num::decimal/success.num*100 as percentage from failure
join success on failure.date = success.date;

select * from failure_rate where percentage > 1;
